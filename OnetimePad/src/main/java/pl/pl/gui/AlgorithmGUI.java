package pl.pl.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import pl.pk.onetimepad.AlgorithmOTP;
import pl.pk.onetimepad.IAlgorithm;

/**
 * Laboratorium, pon. godz 14.15 Zestaw nr 3 Łukasz Cyran - 180519 Piotr Grzelak
 * - 180553 Wojciech Szałapski - 180706
 */
public class AlgorithmGUI extends javax.swing.JFrame {

    /**
     * Creates new form AlgorithmGUI
     */
    public AlgorithmGUI() {
        initComponents();
        setTitle("One-time pad 6000");
        algorithm = new AlgorithmOTP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInputText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaOutputText = new javax.swing.JTextArea();
        jButtonEncryptFile = new javax.swing.JButton();
        jButtonDecryptFile = new javax.swing.JButton();
        jButtonEncryptText = new javax.swing.JButton();
        jButtonDecryptText = new javax.swing.JButton();
        jLabelOutputText = new javax.swing.JLabel();
        jLabelInputText = new javax.swing.JLabel();
        jButtonLoadKey = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreaInputText.setColumns(20);
        jTextAreaInputText.setRows(5);
        jScrollPane1.setViewportView(jTextAreaInputText);

        jTextAreaOutputText.setColumns(20);
        jTextAreaOutputText.setRows(5);
        jScrollPane2.setViewportView(jTextAreaOutputText);

        jButtonEncryptFile.setText("Szyfruj plik");
        jButtonEncryptFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncryptFileActionPerformed(evt);
            }
        });

        jButtonDecryptFile.setText("Deszyfruj plik");

        jButtonEncryptText.setText("Szyfruj tekst");
        jButtonEncryptText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncryptTextActionPerformed(evt);
            }
        });

        jButtonDecryptText.setText("Deszyfruj tekst");
        jButtonDecryptText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecryptTextActionPerformed(evt);
            }
        });

        jLabelOutputText.setText("Wyjście");

        jLabelInputText.setText("Wejście");

        jButtonLoadKey.setText("Wczytaj klucz");
        jButtonLoadKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonEncryptFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDecryptFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLoadKey))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelOutputText)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButtonEncryptText)
                                .addGap(91, 91, 91)
                                .addComponent(jButtonDecryptText))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelInputText))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEncryptFile)
                    .addComponent(jButtonDecryptFile)
                    .addComponent(jButtonLoadKey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInputText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEncryptText)
                    .addComponent(jButtonDecryptText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelOutputText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEncryptTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncryptTextActionPerformed
        jTextAreaOutputText.setText(new String(algorithm.encrypt(jTextAreaInputText.getText().getBytes())));
        try {
            saveKeyToFile();
        } catch (IOException ex) {
            Logger.getLogger(AlgorithmGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEncryptTextActionPerformed

    private void jButtonEncryptFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncryptFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File file = chooser.getSelectedFile();
                String filePath = file.getParent();
                String fileName = FilenameUtils.getBaseName(file.getAbsolutePath());
                String fileExtension = FilenameUtils.getExtension(file.getAbsolutePath());
                byte[] fileContent;
                try (FileInputStream fis = new FileInputStream(file)) {
                    fileContent = new byte[(int) file.length()];
                    fis.read(fileContent);
                }

                File outputFile = new File(filePath + "/" + fileName + "_encrypted." + fileExtension);
                FileUtils.writeByteArrayToFile(outputFile, algorithm.encrypt(fileContent));

                saveKeyToFile();
            } catch (IOException ex) {
                Logger.getLogger(AlgorithmGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jTextAreaInputText.setText("");
        jTextAreaOutputText.setText("");
    }//GEN-LAST:event_jButtonEncryptFileActionPerformed

    private void jButtonLoadKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadKeyActionPerformed
        try {
            File keyFile = new File(System.getProperty("user.dir") + "/key.otp");
            byte[] keyFileContent;
            try (FileInputStream fis = new FileInputStream(keyFile)) {
                keyFileContent = new byte[(int) keyFile.length()];
                fis.read(keyFileContent);
            }
            algorithm.setKey(keyFileContent);
        } catch (IOException ex) {
            Logger.getLogger(AlgorithmGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Pomyślnie wczytano klucz.");
    }//GEN-LAST:event_jButtonLoadKeyActionPerformed

    private void jButtonDecryptTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecryptTextActionPerformed
        String textToDecrypt = jTextAreaOutputText.getText();
        String decryptedText = new String(algorithm.decrypt(textToDecrypt.getBytes()));

        jTextAreaInputText.setText(decryptedText);
    }//GEN-LAST:event_jButtonDecryptTextActionPerformed

    private void saveKeyToFile() throws IOException {
        File keyFile = new File(System.getProperty("user.dir") + "/key.otp");
        FileUtils.writeByteArrayToFile(keyFile, algorithm.getKey());
        JOptionPane.showMessageDialog(this, "Pomyślnie zapisano klucz w " + System.getProperty("user.dir") + "/key.otp");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlgorithmGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlgorithmGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlgorithmGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlgorithmGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlgorithmGUI().setVisible(true);
            }
        });
    }

    private IAlgorithm algorithm;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDecryptFile;
    private javax.swing.JButton jButtonDecryptText;
    private javax.swing.JButton jButtonEncryptFile;
    private javax.swing.JButton jButtonEncryptText;
    private javax.swing.JButton jButtonLoadKey;
    private javax.swing.JLabel jLabelInputText;
    private javax.swing.JLabel jLabelOutputText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaInputText;
    private javax.swing.JTextArea jTextAreaOutputText;
    // End of variables declaration//GEN-END:variables
}
